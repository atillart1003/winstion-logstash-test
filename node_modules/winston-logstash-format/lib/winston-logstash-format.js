'use strict';

const winston = require('winston');

let instance = null;

class Logger {
  constructor() {
    if (instance) {
      return instance;
    }

    this.logger = this._logger();

    instance = this;
  }

  _console() {
    return new winston.transports.Console({
      formatter:                       this._formatter,
      handleExceptions:                true,
      humanReadableUnhandledException: true,
    });
  }

  _formatter(options) {
    return JSON.stringify({
      '@timestamp': new Date().toISOString(),
      '@version':   1,
      application:  process.env.APP_NAME,
      environment:  process.env.NODE_ENV,
      host:         process.env.HOST,
      message:      options.message,
      severity:     options.level
    });
  }

  _logger() {
    return new winston.Logger({
      exitOnError: false,
      transports:  [this._console()]
    });
  }
}

module.exports = new Logger().logger;
